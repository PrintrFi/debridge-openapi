/*
 * deBridge Liquidity Network (DLN) API
 *
 * A turnkey solution for a high-performance cross-chain trading<br><br><a href=\"https://docs.debridge.finance/dln-the-debridge-liquidity-network-protocol/interacting-with-the-api/quick-start-guide\">Quick Start Guide</a>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BadRequestResponse {
    #[serde(rename = "errorCode")]
    pub error_code: i32,
    #[serde(rename = "errorId")]
    pub error_id: ErrorId,
    #[serde(rename = "errorMessage")]
    pub error_message: String,
    #[serde(rename = "errorPayload")]
    pub error_payload: serde_json::Value,
}

impl BadRequestResponse {
    pub fn new(error_code: i32, error_id: ErrorId, error_message: String, error_payload: serde_json::Value) -> BadRequestResponse {
        BadRequestResponse {
            error_code,
            error_id,
            error_message,
            error_payload,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorId {
    #[serde(rename = "INVALID_QUERY_PARAMETERS")]
    InvalidQueryParameters,
    #[serde(rename = "SOURCE_AND_DESTINATION_CHAINS_ARE_EQUAL")]
    SourceAndDestinationChainsAreEqual,
    #[serde(rename = "INCLUDED_GAS_FEE_NOT_COVERED_BY_INPUT_AMOUNT")]
    IncludedGasFeeNotCoveredByInputAmount,
    #[serde(rename = "INCLUDED_GAS_FEE_CANNOT_BE_ESTIMATED_FOR_TRANSACTION_BUNDLE")]
    IncludedGasFeeCannotBeEstimatedForTransactionBundle,
}

impl Default for ErrorId {
    fn default() -> ErrorId {
        Self::InvalidQueryParameters
    }
}

