/*
 * deBridge Liquidity Network (DLN) API
 *
 * A turnkey solution for a high-performance cross-chain trading<br><br><a href=\"https://docs.debridge.finance/dln-the-debridge-liquidity-network-protocol/interacting-with-the-api/quick-start-guide\">Quick Start Guide</a>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DlnOrderResponse {
    #[serde(rename = "orderId")]
    pub order_id: String,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "externalCallState", skip_serializing_if = "Option::is_none")]
    pub external_call_state: Option<ExternalCallState>,
    #[serde(rename = "orderStruct")]
    pub order_struct: Box<models::OrderStruct>,
}

impl DlnOrderResponse {
    pub fn new(
        order_id: String,
        status: Status,
        order_struct: models::OrderStruct,
    ) -> DlnOrderResponse {
        DlnOrderResponse {
            order_id,
            status,
            external_call_state: None,
            order_struct: Box::new(order_struct),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Created")]
    Created,
    #[serde(rename = "Fulfilled")]
    Fulfilled,
    #[serde(rename = "SentUnlock")]
    SentUnlock,
    #[serde(rename = "OrderCancelled")]
    OrderCancelled,
    #[serde(rename = "SentOrderCancel")]
    SentOrderCancel,
    #[serde(rename = "ClaimedUnlock")]
    ClaimedUnlock,
    #[serde(rename = "ClaimedOrderCancel")]
    ClaimedOrderCancel,
}

impl Default for Status {
    fn default() -> Status {
        Self::None
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExternalCallState {
    #[serde(rename = "NoExtCall")]
    NoExtCall,
    #[serde(rename = "AwaitingOrderFulfillment")]
    AwaitingOrderFulfillment,
    #[serde(rename = "AwaitingExecution")]
    AwaitingExecution,
    #[serde(rename = "Executing")]
    Executing,
    #[serde(rename = "Completed")]
    Completed,
    #[serde(rename = "Failed")]
    Failed,
    #[serde(rename = "Cancelled")]
    Cancelled,
}

impl Default for ExternalCallState {
    fn default() -> ExternalCallState {
        Self::NoExtCall
    }
}
