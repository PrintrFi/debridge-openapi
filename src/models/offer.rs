/*
 * deBridge Liquidity Network (DLN) API
 *
 * A turnkey solution for a high-performance cross-chain trading<br><br><a href=\"https://docs.debridge.finance/dln-the-debridge-liquidity-network-protocol/interacting-with-the-api/quick-start-guide\">Quick Start Guide</a>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Offer {
    #[serde(rename = "chainId")]
    pub chain_id: ChainId,
    #[serde(rename = "tokenAddress")]
    pub token_address: String,
    #[serde(rename = "amount")]
    pub amount: i32,
}

impl Offer {
    pub fn new(chain_id: ChainId, token_address: String, amount: i32) -> Offer {
        Offer {
            chain_id,
            token_address,
            amount,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChainId {
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "10")]
    Variant10,
    #[serde(rename = "56")]
    Variant56,
    #[serde(rename = "137")]
    Variant137,
    #[serde(rename = "250")]
    Variant250,
    #[serde(rename = "8453")]
    Variant8453,
    #[serde(rename = "42161")]
    Variant42161,
    #[serde(rename = "43114")]
    Variant43114,
    #[serde(rename = "59144")]
    Variant59144,
    #[serde(rename = "7565164")]
    Variant7565164,
    #[serde(rename = "100000001")]
    Variant100000001,
    #[serde(rename = "100000002")]
    Variant100000002,
    #[serde(rename = "100000004")]
    Variant100000004,
    #[serde(rename = "100000006")]
    Variant100000006,
    #[serde(rename = "100000008")]
    Variant100000008,
    #[serde(rename = "100000009")]
    Variant100000009,
    #[serde(rename = "100000010")]
    Variant100000010,
    #[serde(rename = "100000013")]
    Variant100000013,
    #[serde(rename = "100000014")]
    Variant100000014,
    #[serde(rename = "100000017")]
    Variant100000017,
    #[serde(rename = "100000020")]
    Variant100000020,
    #[serde(rename = "100000021")]
    Variant100000021,
    #[serde(rename = "100000022")]
    Variant100000022,
    #[serde(rename = "100000023")]
    Variant100000023,
    #[serde(rename = "100000024")]
    Variant100000024,
    #[serde(rename = "100000025")]
    Variant100000025,
    #[serde(rename = "100000027")]
    Variant100000027,
}

impl Default for ChainId {
    fn default() -> ChainId {
        Self::Variant1
    }
}
